function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 06-Jul-2017 17:33:16.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx50 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx2 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.165789463;0.051939902;0.498255;0.01899;0.188675;0.099237438;1.437591913;0.1289;0.863018493;0.02496;0.532535811;0.10693;0.36262;0.004394371;0.42103;0.421639327;0.129825;0.134912;0.172367203;0.377886089;0.64171;0.011005;0.089725;0.111407851;0.101528;0.028758;0.076974;0.51204;0.20624;0.12885;0.048065144;0.048395;0.085868;0.187605;0.016775;0.0092;0.200102734;0.25259;0.1445819;0.06265;0.586812781;0.8478;0.414262526;1.418025;0.203513338;0.03067;0.0422;0.18786;0.283122098;0.18108882];
x1_step1.gain = [0.34287012076551;0.342690374172719;0.445315224819499;0.412194251013922;0.4260068672307;0.0803704915963977;0.0851914544872679;0.0807074003641921;0.0844312687323796;0.0814802683308197;0.475359571540583;0.420471053721484;0.431684582435171;0.526491760893185;0.462257805800873;0.438813890022148;0.699768737418652;0.529341621943367;0.418653642557266;0.56504997875114;0.461160487308287;0.412070418792985;0.415574484973346;0.373528753187922;0.308505167216366;0.337606075829025;0.341435949859448;0.455488004154051;0.419598611967792;0.417354019086577;0.41455949856402;0.412702146670216;0.520966073725231;0.423810073753548;0.44025759471867;0.44625512132669;0.352945172868781;0.462809330084756;0.430503488251377;0.438553755607197;0.0914001625073593;0.0849247636741702;0.0816194524506845;0.0854200906607072;0.0817980715919922;0.402719159766745;0.406926292423338;0.424533808811199;0.424171146600072;0.415227541640897];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.14787379468707254;0.2116877899956443;-0.12854612864843545;0.37914406279582658;0.051107632961825793];
IW1_1 = [-0.041556076350495887 0.079385808462452787 -0.027512311424404395 -0.0036388551756122022 0.18956906771195053 -0.041929375311774916 0.052764145569805514 -0.041950610584696173 -0.098544192609034992 -0.12089772039524754 -0.022727669744422446 0.021494530325232158 -0.081780753955539728 -0.21197789982738913 0.053865344292951867 0.062399858987986265 -0.078599157294377511 -0.055753217847239044 0.080137366419691089 0.13239304206966723 -0.03232659553010838 -0.0049980686850053576 -0.089585265635053951 -0.040444573030553391 0.0027542489033191989 0.11917091947283366 0.058140083785031792 -0.027070157135582956 0.16326960758051026 -0.0099957799435577629 -0.04181234861465926 -0.03706930384118029 -0.22589085887701996 0.055134945137999894 -0.069432263708046116 0.04081395162828929 0.15723185732550662 -0.14505195927793813 0.04509775282539924 0.052109069568766389 0.048189390584756422 0.045647764561253988 -0.035433817183000406 0.027409284987965004 -0.084302361596631084 0.055046994201066637 0.010761890214385528 -0.110778720014113 -0.036109303670410674 -0.03325672963760791;0.088793550655750772 -0.11227048011232905 -0.094160021592352192 -0.059205598141207724 -0.17992388071641796 0.18943512383473457 0.061042329849357403 0.069831973476630282 -0.047662541295681912 0.0042619360670198636 0.12193478296535988 0.085703223513057494 -0.11418534249952118 -0.04207730211125929 0.18419708788633343 -0.017220116843128304 0.10831644210977347 0.028418387058454234 -0.22331295667902618 0.0040348588656638927 0.099044115037898797 0.009152029023471878 -0.030019821108529406 0.095528878589638627 -0.076449529140599659 0.058157140702610112 -0.048104312934066973 0.10713184309235267 -0.029142582666949145 0.063551041492372645 -0.063260334901511825 0.044325323808065482 0.08985669418176713 -0.059909725381708509 -0.018496860991962696 -0.056316710349115541 0.017156521811749662 0.083201638638437311 -0.049320478192298206 0.046908031287118852 -0.0087971907715113547 -0.039308446350664002 0.070724299210525601 -0.0011883272550780876 0.12479217815426488 -0.048999287639898782 0.12398436321451907 0.11737858825371908 0.094479491945053645 -0.13153694988629039;-0.0023983532278911246 -0.0068434881586217789 -0.024890382004288437 0.035196814259670958 -0.0088144931137149052 -0.017237726711820046 0.017214690204311451 -0.05570784648228011 -0.034074824623772204 -0.027079713642673562 -0.0032937146219804256 0.0050913423338031557 -0.057289284603479623 -0.15150753673446241 0.014980401131306831 0.02381904565032485 0.0076726351583488337 0.013443288612887567 0.029681824773691752 0.042299228507306774 0.048523073934845111 0.04743493813755939 -0.065092439606965841 -0.045942122495368512 0.056479744907631947 0.0069042193988686062 -0.043613335730692558 -0.011720568641764713 -0.042932851687829128 -0.016601490379479261 0.010573973749663349 0.085477557501808063 -0.0089061643359489781 0.0010937149016583326 0.0080070624300377941 0.060400887501687782 -0.030154971953134314 0.071877688026267442 0.11369786101508619 -0.01890011927941266 -0.037875259395482509 0.001666514650393037 0.048885748927310235 0.013756459299961457 -0.013144442225450453 -0.019565110678161919 0.0035634528250958414 -0.030002317135894543 -0.013884789608091891 0.007800724200609197;-0.046582131410980748 0.035190838583370417 -0.0046677663482898321 -0.1333130208872759 -0.0080299516670419777 -0.05180362690015454 0.11580131747307945 0.023410402547170174 -0.096862397400842751 0.047736997491551345 0.041763863447858394 0.025255436751892624 -0.068522314157064376 0.15576873730019208 -0.12011575581750945 -0.10957162231851326 -0.025703608688732487 -0.070429778539812263 -0.028074854813515373 -0.01509120501957341 0.010314244855530249 -0.07926690711170073 0.060214602305156642 -0.043751828400009116 0.10703204097503008 -0.2935964288165811 0.032625784135927184 -0.21733758177258883 0.019712349388472553 0.046346201113809916 -0.02548290666642453 0.14391507967919945 -0.027008186021553748 0.041202058114791731 0.068012193973391047 0.15135860359797701 0.15244484825981983 0.088396252111665935 0.0020892904463260778 0.028787685666508703 0.078907092168882448 -0.017345197380535967 0.010014264328169573 -0.022779393525081602 -0.12457556905341882 -0.019857026326293679 0.044189775726579672 0.047066403053099462 0.093659418617552517 0.029020722793364848;0.0022673351596595773 0.0039704470447791155 0.0051999209059503983 -0.017365534560353741 0.0054530839938824885 0.0084145037920413945 -0.0041289643074896697 0.020717528329454855 0.014822898952468406 0.0097475356090895235 0.0013902604982601937 -1.5957079440487252e-05 0.018910257503194552 0.053360564897170892 -0.004055447761054579 -0.004212577814329631 -0.0059661644592873793 -0.0062539958208518241 -0.011827209438465644 -0.013434943830718249 -0.018014106449171022 -0.015145079995860358 0.023717617586780079 0.016702044431403926 -0.019454444828954674 0.00068018715180810511 0.01725458777931704 0.0078971304906322315 0.016830553986009706 0.0047510088035213087 -0.0045360398588207441 -0.033550027114670214 0.0012168940053734821 0.00086786177305367656 -0.0046920525844210579 -0.023746778723582315 0.011747264161066003 -0.028855740970953486 -0.03867434217713088 0.0069297063567289284 0.013850979783847927 -0.0028578845521554327 -0.017710127709740047 -0.0028235843328557639 0.0040544512097177784 0.0043526489835040974 -0.0010392135744237796 0.010020173717428279 0.0044185455494725493 -0.0035720145101159157];

% Layer 2
b2 = [0.48234271053472566;-0.1480019196663192];
LW2_1 = [0.12819931184218508 0.16075023056144208 -0.32899719841921971 0.17035007239193067 0.12020568363119227;-0.4698299731328624 -0.54024870244029588 -0.061138900125584018 -0.58377750621177882 0.023775909104645179];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1.36570565601535;1.33315184692857];
y1_step1.xoffset = [0.0672956;-1.54986];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
